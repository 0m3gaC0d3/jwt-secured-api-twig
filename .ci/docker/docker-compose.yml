version: '2.3'
services:
  #======================================================
  # DB
  #======================================================
  db:
    image: mysql:5.7
    command: mysqld --character-set-server=utf8
    environment:
      MYSQL_ROOT_PASSWORD: 1234
  #======================================================
  # Build
  #======================================================
  build:
    image: composer
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
          composer install;
      "
  #======================================================
  # Lint
  #======================================================
  lint:
    image: php:${PHP_VERSION}-alpine
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
          if find ./src/ -type f -name '*.php' -exec php -l {} \; | grep \"Parsing error\"; then exit 1; fi
      "
  #======================================================
  # PHP fix
  #======================================================
  fix:
    image: php:${PHP_VERSION}-alpine
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
        echo \"Fix quality errors...\";
        vendor/bin/php-cs-fixer fix --allow-risky=yes
        vendor/bin/phpcbf --error-severity=1 --warning-severity=8 --extensions=php
      "
  #======================================================
  # Quality
  #======================================================
  quality:
    image: php:${PHP_VERSION}-alpine
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
          echo \"Running phpcs...\";
          vendor/bin/phpcs --error-severity=1 --warning-severity=8 --extensions=php src;
          echo \"Running php-cs-fixer...\";
          vendor/bin/php-cs-fixer fix --dry-run --diff --allow-risky=yes
          echo \"Running phpmd...\";
          vendor/bin/phpmd src text phpmd.xml;
          echo \"Running phpstan...\";
          vendor/bin/phpstan analyse -c phpstan.neon
      "
  #======================================================
  # Unit tests
  #======================================================
  unit:
    image: php:${PHP_VERSION}-alpine
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
          php vendor/bin/phpunit -c phpunit.xml tests/Unit;
      "
  #======================================================
  # end to end tests
  #======================================================
  e2e:
    image: php:${PHP_VERSION}-alpine
    links:
      - api
    depends_on:
      - api
    volumes:
      - ${ROOT_DIR}:${ROOT_DIR}
    working_dir: ${ROOT_DIR}
    command: >
      /bin/sh -c "
          php vendor/bin/phpunit -c res/test/api/api.phpunit.xml tests/Api;
      "
  #======================================================
  # api
  #======================================================
  api:
    container_name: api
    image: omegacode/jwt-secured-api-web-server:1.0
    volumes:
      - ${ROOT_DIR}:/var/www/html
    ports:
      - 80:80
    environment:
      - APP_ENV
